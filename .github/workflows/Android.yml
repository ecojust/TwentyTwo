name: Android
on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
      actions: write
      attestations: write
      deployments: write
      packages: write
      id-token: write
    strategy:
      matrix:
        include:
          - platform: "ubuntu-22.04"
            args: "--target armv7-linux-androideabi,aarch64-linux-android" # 添加多架构支持

    runs-on: ${{ matrix.platform }}

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以便正确生成版本号

      # Rust setup
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      # Rust cache
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      # Sync node version and setup cache
      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

        # Install yarn globally
      - name: Install pnpm
        run: npm install -g yarn

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: yarn install

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev
          # 确保安装完整的 OpenSSL 开发包
          sudo apt-get install pkg-config libssl-dev

      - name: Install Android dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lib32z1 patchelf

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # 修改 NDK 安装方式
      - name: Install Android NDK
        run: |
          # 使用 cmdline-tools 安装 NDK
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.1.8937393" --sdk_root=${ANDROID_HOME}
          # 设置 NDK_HOME 环境变量
          echo "NDK_HOME=${ANDROID_HOME}/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/25.1.8937393" >> $GITHUB_ENV

      # 修改版本号生成逻辑
      - name: Get date and run number
        id: version # 添加id属性
        run: |
          echo "bundle_version=0.0.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Android init
        run: |
          # 显示 NDK 路径
          echo "NDK_HOME: $NDK_HOME"
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          # 初始化 Android 环境
          yarn run tauri android init

      - name: Android build
        run: |
          # 设置 OpenSSL 环境变量
          export OPENSSL_DIR=/usr
          export OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu
          export OPENSSL_INCLUDE_DIR=/usr/include/openssl
          # 添加调试信息
          ls -la /usr/include/openssl
          # 使用 pkg-config 检查 OpenSSL 配置
          pkg-config --libs --cflags openssl || echo "pkg-config for openssl failed"
          # 构建 Android 应用
          RUST_BACKTRACE=1 yarn run tauri android build

      # 添加发布到GitHub Release的步骤
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src-tauri/target/android/**/*.apk
            src-tauri/target/android/**/*.aab
          name: Release ${{ github.ref_name }}
          body: |
            Android 应用版本 ${{ steps.version.outputs.bundle_version }}

            自动构建发布
